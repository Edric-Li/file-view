worker_processes  4;
worker_rlimit_nofile 204800;
worker_cpu_affinity 0001 0010 0010 1000;

events {
    use epoll;
    worker_connections  204800;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    sendfile        on;
    tcp_nopush      on;
    gzip  on;

    server_names_hash_bucket_size 128;
    client_header_buffer_size 4k;        #客户端请求头部的缓冲区大小，
    large_client_header_buffers 4 256k;  #设置客户端请求的Header头缓冲区大小
    client_max_body_size       10g;      #允许客户端请求的最大单文件字节数
    client_body_buffer_size    20m;      #缓冲区代理缓冲用户端请求的最大字节数
    proxy_connect_timeout      600s;     #nginx跟后端服务器连接超时时间(代理连接超时)
    proxy_send_timeout         1200;     #后端服务器数据回传时间(代理发送超时)
    proxy_read_timeout         1200;     #连接成功后，后端服务器响应时间(代理接收超时)
    proxy_buffer_size          64k;      #设置代理服务器（nginx）保存用户头信息的缓冲区大小
    proxy_buffers              4 128k;   #proxy_buffers缓冲区，网页平均在32k以下的话，这样设置
    proxy_busy_buffers_size    256k;     #高负荷下缓冲大小（proxy_buffers*2）
    proxy_temp_file_write_size 256k;     #设定缓存文件夹大小，大于这个值，将从upstream服务器传

    keepalive_timeout 240;               #keepalive 超时时间
    open_file_cache max=204800 inactive=20s;
    open_file_cache_min_uses 1;
    open_file_cache_valid 30s;
    tcp_nodelay on;
    gzip_min_length 1k;
    gzip_buffers 4 16k;
    gzip_http_version 1.0;
    gzip_comp_level 2;
    gzip_types text/plain application/x-javascript text/css application/xml;
    gzip_vary on;

    #<< 支持websocket ------------------------------------------
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    server {
         listen 80;
         server_name 127.0.0.1;

         proxy_http_version         1.1;
         proxy_redirect             off;

         # 后端的Web服务器可以通过X-Forwarded-For获取用户真实IP
         proxy_set_header           Host $host;
         proxy_set_header           X-Real-IP $remote_addr;
         proxy_set_header           X-Forwarded-For $proxy_add_x_forwarded_for;

         # 支持websocket ------------------------------------------
         proxy_set_header           Upgrade $http_upgrade;
         proxy_set_header           Connection $connection_upgrade;

         location / {
             root             /file-view/web/build;
             try_files $uri   /index.html;
         }

         location /api {
             rewrite                /api/(.*) /$1 break;
             proxy_pass       http://localhost:7001;
         }
    }
}

